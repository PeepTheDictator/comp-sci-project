import random

pc_adv = []
advantages={"Altered Time Rate":" Gives an extra turn to attack with. (Cost: 100 per level)",
            "Cat Fall": "Less damage from falls. (Cost: 20)",
            "Chameleon": "You blend in with your surroundings better. (Cost: 10)",
            "Claws": "Strikes with fist deal more damage. (Cost: 20)",
            "Combat Reflexes": "Gives a chance that an incoming attack will be dodged. (Cost: 25)",
            "Damage Resistance": "Reduced damage from attacks. (Cost: 5)",
            "Dominance": "Take over an enemy (Cost: 20)",
            "Duplication": "Split into two copies of yourself, but you keep the same stats. (Cost: 35)",
            "Extra Attack": "An extra attack within the turn will be granted. (Cost:  25)",
            "Extra Life": "If completely killed you will come back to live with full health. (Cost:  25)",
            "Flight": "You can fly now. (Cost:  40)",
            "Gunslinger": "Better accuracy when shooting weapons. (Cost: 25)",
            "Hard to kill": "It now makes you harder to kill.  (Cost: 2 per lvl)",
            "Healing": "You can spend 1 fatigue point 1D6.  (Cost: 30)",
            "Injury Tolerance": "You have a supernatural resistance to damage",
            "Homogeneous": "You have resistance to piercing, slashing, and budgening damage",
            "Invisibility": "You gain a +15 to stealth checks",
            "Magic Resistance": "You gain resistance to damage (Cost: 2 per lvl)",
            "Mind Control": "What it sounds like (Cost: 50 points)",
            "Mind Sheild": "You have a resistance to psychic effects (Cost: 4 per lvl)",
            "Unkillable": "You can go down to -10x your health, levels give indestructable bones, and resurection(after time)",
            "Regeneration":"you regenerate health, slow or fast"}

#points per adv - Moses and Cooper
adv_points= {"Altered Time Rate": 100,
                "Cat Fall": 20,
                "Chameleon": 10,
                "Claws":20,
                "Combat Reflexes": 25,
                "Damage Resistance": 5,
                "Dominance": 20,
                "Duplication": 35,
                "Extra Attack": 25,
                "ExtraLife": 25,
                "Flight": 40,
                "Gunslinger": 25,
                "Hard to Kill": 2,
                "Healing": 30,
                "Injury Tolerance": 5,
                "Homogeneous": 20,
                "Invisibility": 13,
                "Magic Resistance": 2,
                "Mind Control": 50,
                "Mind Sheild": 4,
                "Unkillable": 50,
                "Regeneration":50}
#assigning advantages to variables for function -Cameron 12/13
adv_var = {"Altered Time Rate":0,
           "Chameleon":0,
           "Damage Resistance":0,
           "Duplication":0,
           "Extra Attack":0,
           "Extra Life":0,
           "Hard to Kill":0,
           "Magic Resistance":0,
           "Mind Shield":0,
           "Unkillable": 0,
           "Regeneration":0}

stat_cost = {"str":10,
             "dex":20,
             "int":10,
             "ht":10,
             "hp":2,
             "will":5,
             "per":5,
             "fp":3}




def stat_display(pc_str,pc_dex,pc_int.pc_ht,pc_hp,pc_will,pc_per,pc_fp,points):
    print("\n\n\n\n\n\n\n")
    print("STR:",pc_str,"[",pc_str * 10 - 100,"]            HP:",pc_hp,"[",pc_hp * 2 - 20,"]")
    print("DEX:",pc_dex,"[",pc_dex * 20 - 200,"]            WILL:",pc_will,"[",pc_will * 5 - 50,"]")
    print("INT:",pc_int,"[",pc_int * 10 - 100,"]            PER:",pc_per,"[",pc_per * 5 - 50,"]")
    print("HT:",pc_ht," [",pc_ht * 10 - 100,"]            FP:",pc_fp,"[",pc_fp * 3 - 30,"]")

#upgrading stats - Cameron
def menu_select(select):
    select = input("\n\n\nwhat would you like to do/edit?\nAdvantages(adv)\nStats\nEquipment(equip)\nPlay\n")
    

def stat_buy(points):
    stat = input("please insert a stat to upgrade, or optimize your skill to stat ratio with (auto)\n")
    
    if stat not in stat_cost:
        print("invalid")
    else:
        score = stat_cost(stat)
        
    change = input("would you like to increase or decrease this stat?")
    if "d" in change:
        c = -1
        buy = int(input("insert an amount of levels to decrease by")
    if "i" in change:
        c = 1
    
    if buy <= 0
        print("you cannot increase or decrease by an amount less than or equal to 0")
        block = "y"
    else:
        conf = input("are you sure that you want to increase/decrease ",stat," by ",stat_cost[stat]*change," points?"
        if "y" in conf:
            points -= stat_cost*c*change


#global varables-----------------------------------------
select = None
choice = None
points = None
pc_str = 10
pc_hp = 10
pc_dex =  10
pc_will = 10
pc_int = 10
pc_per = 10
pc_ht = 10
pc_fp = 10

def main(select,choice,points):
    stat_display(pc_str,pc_dex,pc_int.pc_ht,pc_hp,pc_will,pc_per,pc_fp,points)
    menu_select(select)
