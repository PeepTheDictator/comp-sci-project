import random
import csv
#Menu-------------------Cameron
conf = "n"
select = ""
mode = 1
dev = 0
god = 0
while conf == "n":
    print("\n\n\n\nwelcome to the menu, please choose one of the following")
    menu = input("settings \nextras \nplay \nhelp \n")
 
    #settings menu--Cameron
    while "settings" in menu:
        print("Welcome to settings, Please choose on of the follwing, or type back\n")
        print("God Mode: on---off")
        print("Dev mode: on---off")
        settings = input(" ")
        mode = 1
        god = 0

        #difficulty selections-Daniel
        
        if "god" in settings:
            print("god mode will make you unkillable, meaning you have an infinite (almost) amount of HP")
            god = input("Please input \non(1) \noff(0) \n")
            
        if "dev" in settings:
            print("this will grant you an unlimited amount of points, this is intended for the testing of extremes, beware, there may be bugs and/or crashes if abused")
            dev = input("Please input \non(1) \noff(0) \n")
        if "back" in settings:
            menu = "yeet"
            break
 
 
 
    #special settings menu--Cooper
    while "extras" in menu:
        print("Welcome, here you can choose some different modes to add spice to the game, please choose one of the following\nWarning, unimplimented")
        special = input("\nGod Slayer: \nLast Stand: \nDemi God \nRealism \nBack\n")
        gs = 0
        ls = 0
        dg = 0
        real = 0
 
        if "back" in special:
            break
            
        if "god" in special or "god slayer" in special:
            print("please choose one of the following")
            gs = input("on(1) \noff(0)\n")
            continue
 
        if "last" in special or "last stand" in special:
            print("please choose one of the following")
            ls = input("on(1) \noff(0)\n")
            continue
 
        if "demi" in special or "demi god" in special:
            print("please choose one of the following")
            dg = input("on(1) \noff(0)\n")
            continue
 
        if "real" in special or "realism" in special:
            print("please choose one of the following")
            real = input("on(1) \noff(0)\n")
            continue
 
 
    #basically just a help tab-Cooper
    if menu == "help":
        print("Hello and welcome to Battle sim, You will play by typing a specific command into the console to preform the corresponding action")
        print("You will be taking the role of an adventurer, who will be taking on a variety of monsters there will be a variety of diffrent situations that you may encounter. you will input any of the displayed options in order to select your action and continue ")
        input("please press enter once finished")
 
 
    if menu == "play":
        conf = input("are you are ready to play? \n(y/n)\n")

mode = 1
select = None
points = None
conf = "n"
diff = 0

while conf != "y":
    select = input("what difficulty would you like to choose?\nVery Easy\nEasy\nMedium\nHard\nVery Hard\n")
    if select == "very easy":
        mode = 1
        points = 400
        diff = 1
    if select == "easy":
        mode = 2
        points = 350
        diff = 2
    if "medium" in select:
        mode = 3
        points = 300
        diff = 3
    if "hard" in select:
        mode = 4
        points = 250
        diff = 4
    if "very hard" in select:
        mode = 5
        points = 200
        diff = 5

    print("DISCLAIMER: if you don't input a valid input, your points will be voided")
    conf = input("are you sure? (y/n)\n")
    if conf == "y":
        print("good luck")
    else:
        continue


pc_str = 10
pc_hp = 10
pc_dex =  10
pc_will = 10
pc_int = 10
pc_per = 10
pc_ht = 10
pc_fp = 10

conf = "n"

select = None

choice = None
inc = None

stat = None
score = 0


#definitions - Moses and Cooper
pc_adv = []
advantages={"Altered Time Rate":" Gives an extra turn to attack with. (Cost: 100 per level)",
            "Cat Fall": "Less damage from falls. (Cost: 20)",
            "Chameleon": "You blend in with your surroundings better. (Cost: 10)",
            "Claws": "Strikes with fist deal more damage. (Cost: 20)",
            "Combat Reflexes": "Gives a chance that an incoming attack will be dodged. (Cost: 25)",
            "Damage Resistance": "Reduced damage from attacks. (Cost: 5)",
            "Dominance": "Take over an enemy (Cost: 20)",
            "Duplication": "Split into two copies of yourself, but you keep the same stats. (Cost: 35)",
            "Extra Attack": "An extra attack within the turn will be granted. (Cost:  25)",
            "Extra Life": "If completely killed you will come back to live with full health. (Cost:  25)",
            "Flight": "You can fly now. (Cost:  40)",
            "Gunslinger": "Better accuracy when shooting weapons. (Cost: 25)",
            "Hard to kill": "It now makes you harder to kill.  (Cost: 2 per lvl)",
            "Healing": "You can spend 1 fatigue point 1D6.  (Cost: 30)",
            "Injury Tolerance": "You have a supernatural resistance to damage",
            "Homogeneous": "You have resistance to piercing, slashing, and budgening damage",
            "Invisibility": "You gain a +15 to stealth checks",
            "Magic Resistance": "You gain resistance to damage (Cost: 2 per lvl)",
            "Mind Control": "What it sounds like (Cost: 50 points)",
            "Mind Sheild": "You have a resistance to psychic effects (Cost: 4 per lvl)",
            "Unkillable": "You can go down to -10x your health, levels give indestructable bones, and resurection(after time)",
            "Regeneration":"you regenerate health, slow or fast"}

#points per adv - Moses and Cooper
adv_points= {"Altered Time Rate": 100,
                "Cat Fall": 20,
                "Chameleon": 10,
                "Claws":20,
                "Combat Reflexes": 25,
                "Damage Resistance": 5,
                "Dominance": 20,
                "Duplication": 35,
                "Extra Attack": 25,
                "ExtraLife": 25,
                "Flight": 40,
                "Gunslinger": 25,
                "Hard to Kill": 2,
                "Healing": 30,
                "Injury Tolerance": 5,
                "Homogeneous": 20,
                "Invisibility": 13,
                "Magic Resistance": 2,
                "Mind Control": 50,
                "Mind Sheild": 4,
                "Unkillable": 50,
                "Regeneration":50}
#assigning advantages to variables for function -Cameron 12/13
adv_var = {"Altered Time Rate":0,
           "Chameleon":0,
           "Damage Resistance":0,
           "Duplication":0,
           "Extra Attack":0,
           "Extra Life":0,
           "Hard to Kill":0,
           "Magic Resistance":0,
           "Mind Shield":0,
           "Unkillable": 0,
           "Regeneration":0}
#leveled adv fuction - Cameron

#equipment variables------------Cooper & Moses
pc_equip = None
#gun damages---------------
def pistol():
    di=random.randint(1,6)
    pistol=(di-3)*.5
    if pistol <1:
        pistol=1.0
    print(pistol)

def ar():
    di=random.randint(1,6)
    AR= (di+2)*5
    print(AR)

def shotgun():
    di=random.randint(1,6)
    di2=random.randint(1,6)
    shotgun= (di+di2)-1
    print(shotgun)

def sniper():
    di=random.randint(1,6)
    di1=random.randint(1,6)
    di2=random.randint(1,6)
    di3=random.randint(1,6)
    di4=random.randint(1,6)
    di5=random.randint(1,6)
    dix=di+di1+di2+di3+di4+di5
    sniper= (dix*2)*1.5
    print(sniper)

def buy(gun):
    input("Are you sure you would like this?\nYou can only have one\n")
    if "yes":
        pc_equip = gun
        print(pc_equip)
#idk actually-Cooper
pistol=()
ar=()
shotgun=()
sniper=()
#small menu - cameron
conf = "n"
while conf == "n":
    print("\n\n\n\n\n\n\n")
    print("STR:",pc_str,"[",pc_str * 10 - 100,"]           HP:",pc_hp,"[",pc_hp * 2 - 20,"]")
    print("DEX:",pc_dex,"[",pc_dex * 20 - 200,"]           WILL:",pc_will,"[",pc_will * 5 - 50,"]")
    print("INT:",pc_int,"[",pc_int * 10 - 100,"]           PER:",pc_per,"[",pc_per * 5 - 50,"]")
    print("HT:",pc_ht," [",pc_ht * 10 - 100,"]           FP:",pc_fp,"[",pc_fp * 3 - 30,"]")
    print("Current Points:",points)
    print("Statscore status",score)
    print("Owned adv", pc_adv)
    print("Leveled Advantages:\nAltered Time Rate:",adv_var["Altered Time Rate"])
    print("Chameleon:",adv_var["Chameleon"])
    print("Damage Resistance:",adv_var["Damage Resistance"])
    print("Duplication:",adv_var["Duplication"])
    print("Extra Attack:",adv_var["Extra Attack"])
    print("Extra Life:",adv_var["Extra Life"])
    print("Hard to Kill:",adv_var["Hard to Kill"])
    print("Magic Resistance:",adv_var["Magic Resistance"])
    print("Mind Shield:",adv_var["Mind Shield"])
    print("Unkillable:",adv_var["Unkillable"])
    print("Regeneration:",adv_var["Regeneration"])
    #upgrading stats - Cameron
    select = input("\n\n\nwhat would you like to do/edit?\nAdvantages(adv)\nStats\nEquipment(equip)\nPlay\n")
    if select == "stat" or select == "stats":
        stat = input("please insert a stat to upgrade, or optimize your skill to stat ratio with (auto)\n")
        inc = int(input("what would you like to increase this stat by?\n"))
        if stat == "str":
            score = pc_str * 10 - 100
        if stat == "hp":
            score = pc_hp * 10 - 20
        if stat == "dex":
            score = pc_dex * 20 - 200
        if stat == "will":
            score = pc_will * 5 - 50
        if stat == "int":
            score = pc_int * 10 - 100
        if stat == "per":
            score = pc_per * 5 - 50
        if stat == "ht":
            score = pc_ht * 10 - 100
        if stat == "fp":
            score = pc_fp * 3 - 30                            
        else:
            ("invalid")

        if points > inc * score:
            if inc <= 0:
                print("you cannot increase a stat by 0 or lower")
            if inc > 0:
                if stat == "str":
                    if inc * 10 > points:
                        print("you cannot afford this")
                    else:
                        pc_str += inc
                        points -= inc * 10
                select == None

                if stat == "hp":
                    if inc * 2 > points:
                        print("you cannot afford this")
                    else:
                        pc_hp += inc
                        points -= inc * 2
                select == None

                if stat == "dex":
                    if inc * 20 > points:
                        print("you cannot afford this")
                    else:
                        pc_dex += inc
                        points -= inc * 20
                select == None

                if stat == "will":
                    if inc * 5 > points:
                        print("you cannot afford this")
                    else:
                        pc_will += inc
                        points -= inc * 5
                select == None

                if stat == "int":
                    if inc * 10 > points:
                        print("you cannot afford this")
                    else:
                        pc_int += inc
                        points -= inc * 10
                select == None

                if stat == "per":
                    if inc * 5 > points:
                        print("you cannot afford this")
                    else:
                        pc_per += inc
                        points -= inc * 5
                select == None

                if stat == "ht":
                    if inc * 10 > points:
                        print("you cannot afford this")
                    else:
                        pc_ht += inc
                        points -= inc * 10
                select == None

                if stat == "fp":
                    if inc * 3 > points:
                        print("you cannot afford this")
                    else:
                        pc_fp += inc
                        points -= inc * 3
                select == None

    #testing for selection - Moses
    if "adv" in select:
    #print out list - Moses
        print(advantages.keys())
        print("")
                 
        while points>=1:
            print("points=",points)
            #ask
            ask= input("\nWhat advantages do you want?, or type back to leave this menu. \n")
            if ask == "back":
                break
            

            
                
            if ask in advantages:
                p=advantages[ask]
                print(ask,":",p)
                #vairify
                ah= input("Are you sure you want to use this? \n")
                if ah == "yes"or"Yes"or"y"or"Y":

                   if ask in adv_var:
                        o =adv_points[ask]
                        print("what level of this would you like to buy?", o , " per lvl")
                        lvl = int(input())
                        points -= lvl * o
                        adv_var[ask] += lvl
                        lvl = 0
                        
                elif ah== 'no'or'No':
                    continue
                
                else:
                    if ask in pc_adv:
                        print("you cannot buy them same advantage more than once")
                        break
                    elif ah== 'no'or'No':
                        continue
                    else:
                        o =adv_points[ask]
                        points-= o
                        pc_adv.append(ask)
                        print(points)
            else:
                print("That is not in the Advantages List\n\n")

    if "equip" in select:

        gun=input("If you would like to buy this, please type one of the following:\nsmall wand(one handed)\nlarge wand(two handed)\nscatter wand(two handed)\nlong wand(two handed)\n")
        buy(gun)

    if "play" in select:
        conf == "y"
        break
#intro
print("""\n\n\n\n\n\n\n
Welcome to G.U.R.P.S.S. (Generic Universal Role Play System Simulator), now that you have created your character and chosen ya' stuff. Lets Get Started!

"You have been called on the hunt of a mystic gem, that's being used in the wrong hands, a bandit captain with a now very inflated ego has been abusing it's power in order to gain
currencey and following, we the (insert cool angency name here) are sending you in to take him out, you, of course, will be hansomly rewarded for your accomplishment"

that's what you were told.
to go in
    to take out the bad guy
        not so bad right?

wrong.
you've been trapped in a time loop for what you estimate to be about a week, and things are starting to get wierd. You've gained some weird sort of powers, and you have started to 
get better at some things, but the force is overwhelming.
Anyways, we gotta go in again, or I just end up back at the start anyways.
    """)

import random
#-----------------------------Moving Variables----------------------------
Yaxis = {"up" : 15 , "down" : -15 }

Xaxis = {"right" : 15 , "left" : -15}
pc_x= 0
pc_y= -15
pc_pos ="x:",pc_x,"y:",pc_y
sett = "yeet"
time = 0
compass = """\n\n\n\n\n\n
            n
        ne  |   nw
   e--------+--------w
        se  |   sw
            s           """
elist = ['e1','e2','e3','bbeg']
list = ["pc",'e1','e2','e3','bbeg','end']
turn = list[time]
win = "n"
target = None
#---------------------Start of Battle variables------------------------------Daniel

#insert ai stats & attacks-----------------------------------------Daniel
example_dex = random.randint(5, 20)
example_ht = random.randint(5, 20)

e1 = {"ai_dex1": 12, "ai_ht1": 9, "ai_str":12,"ai_int":8,'ai_will':10,"ai_fp":14,"ai_per":9}
add = random.randrange(1,5)
e1_hp = 34
e2_hp = 34
e3_hp = 34                                                     #movement here-me

pistol_actions = {"whip":random.randrange(1,4),"shoot":random.randrange(2,18)+1,"run":5,"push":-5}
rifle_actions = {"stock":random.randrange(1,4),"burst":random.randrange(3,18)*3,"shoot":random.randrange(3,18),"move":5,"push":-5}

bbeg = {"bbeg_dex1": 10, "bbeg_ht1": 14, "bbeg_str":23,"bbeg_int":10,'bbeg_will':14,"bbeg_fp":18,"bbeg_per":12}
bbeg_hp = 240
bbeg_act = {"Magic Blast": random.randrange(12,24)+6,"Punch":random.randrange(2,12)+2,}
#end of stats and attacks----------------------------

def pc_speed(pc_dex, pc_ht):
    yes = (pc_dex + pc_ht)/4
    return yes
def speed(dex, ht):
    yes = (dex + ht)/4
    return yes
#decrease hp
def dec_hp(inc, dec):
    return inc - dec
#--------------map askii art-------------
map = print("""
  15   ---------------------------------
  10   |      __________________       |
  5    |     |_(stage)__BBEG______|    |
  0    |                               |
  -5   |      _e_             *  _e_   |
  -10  |              _e_              |
  -15  |     *         †               |
        ---------------------------------
""")
#test
#--------------testing pc stats------------------Cameron

extra = adv_var["Extra Attack"]
moved = 0
#----------Variables--------------Daniel
basic = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
#attacking enemy var
damage = 0
special_attack = 2
pc_dmg = pc_str - 8
pc_dice = random.randrange(1,6)*pc_dmg
target_list = ["e1","e2","e3","BBEG"]

#possible pc attacks--------------------------------Cameron
h_melee = {"\nslash":pc_dice+2*1.5,"stab":pc_dice*2}
if "pistol" in gun:
    h_melee = {"whip":pc_dice+2,"point blank":random.randrange(3,18)+3}


if "small wand" in gun:
    p_re=12
if "large wand" in gun:
    p_re = 31
if "scatter wand" in gun:
    p_re = 9
if "long wand" in gun:
    p_re = 5
    
p_fired = 0

h_range = {}
if "samll wand" in gun:
    h_range = {"fake":random.randrange(3,18),"vitals":random.randrange(3,18)*3,"normal":random.randrange(3,18)} 
if "small wand" in gun:
    h_range = {"burst":random.randrange(3,18)*random.randrange(1,3),"fire":random.randrange(3,18),"unload":random.randrange(3,18)*random.randrange(1,15)}
#attacking def------------------------------Daniel
mc = None
def attack_pc(pc_dmg,pc_dice,pc_eco,elist,p_fired,p_re,e1_hp,e2_hp,e3_hp,bbeg_hp,target):
    argue = "y"
    mc = None
    dodge = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
    basic = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6) 
    if pc_eco > 0:
        attack = input("what will your attack be?\nBack\nMelee\nRange\n")
        if attack == "melee":
            for key in h_melee:
                print(key)
            mc = input("what melee attack would you like to use?\nOr type back to leave\n")
            if mc == "point blank":
                if p_fired >= p_re:
                    print("you reload... your gun was empty")
                    p_fired = 0
                    return 
                else:
                    p_fired += 1
            if mc == "back":
                print("\n\n\n\n")
            else:
                if mc in h_melee:
                    pc_dice = random.randrange(1,6)*pc_dmg
                    if pc_dmg <= 0:
                        pc_dmg = 1
                        pc_dice = random.randrange(1,6)*pc_dmg
                    damage = h_melee[mc]
                    print("who are you going to attack?\n",elist)
                    target = input("")
                    if target in elist:
                        #rolling to see if you hit
                        if basic <= 16:
                            #rolling to see if they dodge it
                            if dodge < 9:
                                print("You attempt to ",mc ," the enemy... \nbut they manage to dodge!")
                            else:
                                if pc_eco > 0:
                                    print("You attempt to", mc, " the enemy... \nand you hit!\n you do ", damage ," damage!")
                                    if target == elist["e1"]:
                                        if target in elist:
                                            e1_hp - damage
                                            print(e1_hp)
                                            if e1_hp <= 0:
                                                print("You have slain (e1)")
                                                elist.remove[1]
                                    else:
                                        print("this target is dead!")
                                    if target == "e2":
                                        if target in elist: 
                                            e2_hp - damage            
                                            if e2_hp <= 0:
                                                print("You have slain (e2)")
                                                elist.remove["e2"]
                                        else:
                                            print("this target is unconciouss!")
                                    if target == "e3":
                                        if target in elist:
                                            e3_hp - damage
                                            if e3_hp <= 0:
                                                print("You have slain (e3)")
                                                elist.remove("e3")
                                        else:
                                            print("this target is dead!")
                        else:
                            print("You attempt to ",attack ," the enemy... \nbut you miss!")
#range sub attack system-------------------------------------Cameorn
        if attack == "range":
            for key in h_range:
                print(key)
            rc = input("what ranged attack would you like to use?\nOr type back to leave\n")
            if rc == "vitals":
                basic -3
            if rc == "fake":
                basic - 4
                dodge - 2
            if rc == "one":
                print()
            if rc == "back":
                print("\n\n\n\n")
            else:
                if rc in h_range:
                    damage = h_range[rc]
                    print("who are you going to attack?\n",elist)
                    target = input("")
                    if target in elist:
                        #rolling to see if you hit
                        if basic <= 16:
                            #rolling to see if they dodge it
                            if dodge <= 8 - 10:
                                print("You attempt to ",rc ," the enemy... \nbut they manage to dodge!")
                            else:
                                if pc_eco > 0:
                                    print("You attempt to", rc, " the enemy... \nand you hit!\n you do ", damage ," damage!")
                                    if target == elist[1]:
                                        if target in elist: 
                                            e1_hp - damage
                                            if e1_hp < -17:
                                                print("You have slain (e1)")
                                                elist.remove("e1")
                                        else:
                                            print("this target is dead!")
                                    if target == "e2":
                                        if target in elist:
                                            if e2_hp < -17:
                                                print("You have slain (e2)")
                                                elist.remove("e2")
                                        else:
                                            print("this target is dead!")
                                    if target == "e3":
                                        if target in elist:            
                                            if e3_hp < -17:
                                                print("You have slain (e3)")
                                                elist.remove("e3")
                                        else:
                                            print("this target is dead!")
                                    if target == "bbeg":
                                        if target in elist:            
                                            if e3_hp < -200:
                                                print("You have slain (e3)")
                                                elist.remove("e3")
                                        else:
                                            print("this target is dead!")
                        else:
                            print("You attempt to ",attack ," the enemy... \nbut you miss!")
                    else:
                        print("the person you are trying to attack is either dead, or dosen't exist")
                        

#enemy attacking def---------------------------Cooper & Moses

time = 0
pc_eco = 1
if extra > 0:
    pc_eco += extra
e1_anger = 0
e1_threshold = random.randrange(2,5)
list = ["pc",'e1','e2',"e3",'bbeg','end']
elist = ['e1','e2','e3','bbeg']
#attempt at the turns and a small menu to choose what you do during the turn
while win == "n":
    turn = list[time]
    list = ["pc",'e1','e2',"e3",'bbeg','end']
    dodge = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
    basic = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
#pc turn
    while "pc" in turn:
        dodge = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
        basic = random.randrange(1,6) + random.randrange(1,6) + random.randrange(1,6)
        action = None
        action = input("\n\nwhat are you going to do?\nYou have an 1 action & 5 ft of movement per turn\nAttack\nMove\nInteract\nEnd\n")
        if action == "attack":
            attack = None
            if pc_eco > 0:
                print("you have ",pc_eco," attacks left")
                attack_pc(pc_dmg,pc_dice,pc_eco,elist,p_fired,p_re,e1_hp,e2_hp,e3_hp,bbeg_hp,target)
                hidden_test = input("")
                if hidden_test == "win":
                    win = "y"
                                
                pc_eco -= 1
            else:
                print ("you have used all of your attacks for this turn")
            damage = 0

        if action == "move":
            if moved >= (pc_dex+pc_ht)/4:
                print("you can have already used all of your movement for this turn")
            else:
                print(compass)
                move = input("where are you going to move to?\nNorth(n)\nSouth(s)\nEast(e)\nWest(w)\ncombination of any two touching (ne,se,nw,sw)\nOr type none if you don't wanna move\n")
                if move == "back":
                    sett == "y"
                    continue
                if move == "none":
                    print("you don't move")
                    moved + 6
                    continue
                if move in ["n","s","e","w","ne","nw","se""sw","none"]:
                    space = int(input("how much?\n"))
                    if space > (pc_dex+pc_ht)/4 + moved:
                        print("you can only move", (pc_dex+pc_ht)/4," ft in one turn (one second)")
                        continue
                    else:
                        if move == "n":
                            pc_y += space
                            moved += space
                            move = None
                        if move == "s":
                            pc_y -= space
                            moved += space
                            move = None
                        if move == "e":
                            pc_x -= space
                            moved += space
                            move = None
                        if move == "w":
                            pc_x += space
                            moved + space
                            move = None
                        if move == "ne":
                            pc_x -= space
                            pc_y += space
                            moved += space
                            move = None
                        if move == "se":
                            pc_x -= space
                            pc_y -= space
                            moved += space
                            move = None
                        if move == "nw":
                            pc_x += space
                            pc_y += space
                            moved += space
                            move = None
                        if move == "sw":
                            pc_x += space
                            pc_y -= space
                            moved += space
                            move = None
                        else:
                            print("invalid input")
                        print(pc_x," is your x axis")
                        print(pc_y," is your y axis")
                        
                        break
                else:
                    print("invalid input")
                    continue
        if action == "end":
            print("you have ended your turn!\n")
            time+=1
            turn = list[time]
            
    print(turn)
    if "e1" in turn:
        if e1_hp >= -17:
            print("it's ",list[time],"'s turn!\n")
            if bbeg_hp <= 10:
                e1_anger += 1
                if e1_anger == e1_threshold:
                    e1_anger = 0
                    e1_threshold = random.randrange(3,6)
                    if basic <= 13:
                        if dodge >= (pc_dex+pc_ht)/4 + 3:
                            pc_hp -= rifle_actions["unload"]
                            print("In retaliation of his captain's pain,",turn," holds the beam in your direction\n'AAAAAAAAAAAAAAHHHHHHHHHHHHH'\n   Screams the bandit\nAs the projectiles lay into you\n")
                    else:
                        print("In retaliation of his captain's pain,",turn," holds the beam in your direction\n'AAAAAAAAAAAAAAHHHHHHHHHHHHH'\n   Screams the bandit\nAs all of the projectiles fly over your head\n")
                        time += 1
                        continue
            else:
                damage = rifle_actions["burst"]
                if basic <= 14: 
                    if dodge <= (pc_dex+pc_ht)/4 + 3:
                        print("e1 manages to clip you with a burst from his wand!\n")
                        pc_hp -= damage
                    else:
                        print("e1 takes his shot at you...\nBut you manage to dodge it!")
                else:
                    print("e1 takes his shot at you...\nBut Misses!\n")
            damage = 0
            time += 1
            continue
    elif e1_hp <= -17:
        print("e1's turn is skipped, because he is dead\n")
        time += 1
        damage = 0
        continue

    elif turn == "e2" or turn == "e3":
        damage = rifle_actions["burst"]
        print("it's ",list[time],"'s turn!\n")
        if basic <= 14: 
            if dodge >= (pc_dex+pc_ht)/4 + 3:
                print(list[time],"manages to clip you with a burst from his wand!")
                pc_hp -= damage
                time += 1
            else:
                print(list[time],"takes his shot at you...\nBut you manage to dodge it!")
                time += 1
        else:
            print(list[time],"takes his shot at you...\nBut Misses!")
        time += 1
        damage = 0
        continue
    elif e2_hp <= -17:
        print(list[time],"'s turn is skipped, because he is dead")
        time += 1
        damage = 0
        continue

    


    if turn == "bbeg":
        print("insert ",list[time],"'s turn here")
        time += 1
        continue
    if turn == "end":
        time = 0
        pc_eco = 1 + extra
        continue

    else:
        if time > 0:
            print("no turn is taken for turn ",time)
        else:
            print("\n")
    print(time)

print("Congrats, you won.")





